This note describes the necessary steps to migrate a single instance from Neo4j 3.5.x to Neo4j 4.0.x

Upgrading To Neo4j 4.0.x From A 3.5.x Version
=============================================

-  Backup:

The Data generated and used by the neo4j container to run the neo4j database instance is persisted with a docker volume (declared as stellio-entity-neo4j-storage in the entity-service ``docker-compose.yml``).

We need to make a backup of this volume that can be used if the migration goes wrong.

To list the docker volumes:

.. code-block:: shell

    docker volume ls

We will use the entity-service_stellio-entity-neo4j-storage volume (please consider working with your own volume name if you changed it in the entity-service ``docker-compose.yml``).

To locate the volume mountpoint:

.. code-block:: shell

    docker volume inspect entity-service_stellio-entity-neo4j-storage

The mountpoint is the path of the ``data`` directory generated by the neo4j container.

Make a copy of this directory.

-  Migration:

1- Update the service image in the ``docker-compose.yml`` of the entity-service: Replace neo4j:3.5.14 by neo4j:4.0

2- Set the NEO4J_ALLOW_UPGRADE variable in entity service ``.env`` file to true (This enable upgrading the store format to the 4.x structure).

3- Under the ``_data`` mounted folder, update the database name by renaming the ``graph.db`` folder under ``databases`` folder to ``stellio`` (stellio is the default database name set with the NEO4J_DEFAULT_DATABASE variable in entity service ``.env`` file).

Note: Please consider that the 4.x version add support for multiple databases that follow a naming convention without special characters including dots.

4- In the entity service, recreate the neo4j container by running:

.. code-block:: shell

    docker-compose up -d

5- Once finished, the NEO4J_ALLOW_UPGRADE variable in the entity service ``.env`` file should be set to false.

Troubleshooting
===============

In case of database connection problem, please consider adding the following environment variable to the entity service ``docker-compose.yml`` file:
NEO4J_dbms_recovery_fail__on__missing__files=false

and removing the ``neostore.transaction.db.0`` file under the new ``stellio`` folder and recreating the container by running:

.. code-block:: shell

    docker-compose up -d

Browser Connection To Neo4j
===========================
For browser connection to Neo4j, please make sure that the Connect URL uses the bolt protocol.